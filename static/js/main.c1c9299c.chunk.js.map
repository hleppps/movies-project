{"version":3,"sources":["components/Filters/Pagination/Pagination.module.scss","components/FilmsListItem/FilmsListItem.module.scss","components/AuthModal/AuthModal.module.scss","components/LoadingSpinner/LoadingSpinner.module.scss","components/FilmsList/FilmsList.module.scss","components/Filters/Filters.module.scss","components/Layout/Layout.module.scss","components/AuthModal/AuthModal.js","components/AuthModal/index.js","utils/constants.js","utils/api.js","store/auth-context.js","utils/fontawasome.js","components/FilmsListItem/FilmsListItem.js","components/FilmsListItem/index.js","components/LoadingSpinner/index.js","components/LoadingSpinner/LoadingSpinner.js","components/FilmsList/index.js","components/FilmsList/FilmsList.js","components/Filters/GenreItem/index.js","components/Filters/GenreItem/GenreItem.js","components/Filters/Genres/index.js","components/Filters/Genres/Genres.js","components/Filters/Pagination/index.js","components/Filters/Pagination/Pagination.js","components/Filters/ReleaseYear/index.js","components/Filters/ReleaseYear/ReleaseYear.js","components/Filters/ResetFilters/index.js","components/Filters/ResetFilters/ResetFilters.js","components/Filters/SortBy/index.js","components/Filters/SortBy/SortBy.js","components/Filters/Filters.js","components/Filters/index.js","components/Header/index.js","components/Header/Header.js","components/Layout/index.js","components/Layout/Layout.js","hooks/useMovies.js","App.js","index.js"],"names":["module","exports","AuthModal","props","useState","isFetching","setIsFetching","isError","setIsError","loginInputRef","useRef","passwordInputRef","onSubmitHadler","event","a","preventDefault","authenticationHandler","Modal","show","modalIsShown","onHide","onHideModal","Header","closeButton","Title","Body","Form","onSubmit","Group","className","controlId","Label","Control","type","defaultValue","required","ref","styles","footer","Button","variant","Spinner","animation","API_DOMAIN","API_KEY","ACTION_SEND","ACTION_SUCCESS","ACTION_ERROR","PAGINATION_INCREASE","PAGINATION_DECREASE","fetchData","path","init","fetch","response","json","data","getFilms","page","year","sorting","genres","CONSTANTS","getGenres","createRequestToken","request_token","validateWithLogin","login","password","requestToken","initObject","headers","Accept","method","body","JSON","stringify","username","createSession","getUserData","sessionId","getFavoriteFilms","reformatedData","results","map","dataItem","id","setFavoriteFilm","filmId","media_type","media_id","favorite","AuthContext","React","createContext","token","isLoggedIn","logout","userName","setUserName","favoriteFilms","setFavoriteFilms","films","AuthContextProvider","initialToken","initialUserName","storedData","Cookies","get","setToken","fetchFavorites","useCallback","useEffect","userIsLoggedIn","logoutHandler","remove","contextValue","set","Provider","value","children","library","add","faStarRegular","faStarSolid","FilmsListItem","useContext","iconType","isFavorite","Card","card","backdropPath","Img","src","alt","title","Text","rating","Footer","icon","onClick","LoadingSpinner","spinner","FilmsList","memo","filmsList","authCtx","favoriteFilmHandler","prevState","filter","itemId","removeFavoriteFilmHandler","addFavoriteFilmHandler","status","length","Row","xs","md","xl","filmItem","Col","includes","backdrop_path","vote_average","GenreItem","isSelected","Check","label","name","checked","onChange","onSelect","Genres","allGenresList","selectedGenresList","setGenresFilter","onSelectHandler","genreId","genreItem","Pagination","onClickHandler","changeType","setPageFilter","filteredPage","pagination","buttons","pages","totalPages","ReleaseYear","Select","setYearFilter","target","filteredYear","ResetFilters","resetFilters","SortBy","setSortingFilter","filteredSorting","Filters","defaultFiltersState","setFilters","filters","setPage","prevPage","newPage","setYear","setSorting","setGenres","setFunctions","useMemo","PAGE","YEAR","SORT","GENRES","RESET","setFiltersHandler","filterType","args","propertiesToFilter","setGenresFilterHandler","selectedGenres","sortingValue","releaseYear","curPage","onShowModal","Navbar","bg","Container","Brand","Layout","layout","setIsLoggedIn","defaultMoviesState","total_pages","error","moviesReducer","state","action","responseData","errorMessage","useMovies","requestFunction","useReducer","moviesState","dispatch","sendRequest","message","App","setAllGenresList","setModalIsShown","hideModalHandler","fetchGenres","enteredLogin","current","enteredPassword","success","newSession","session_id","userData","portalElement","document","getElementById","ReactDOM","createPortal","lg","render"],"mappings":"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","file":"static/js/main.c1c9299c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1qVQW\",\"buttons\":\"Pagination_buttons__Xe9rV\",\"pages\":\"Pagination_pages__2bueq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FilmsListItem_card__2bnJZ\",\"body\":\"FilmsListItem_body__3F3BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"AuthModal_footer__1_RBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2ZLhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmsList_filmsList__1DoDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__3jkRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2Xkal\"};","import { useRef, useState } from \"react\";\r\nimport { Button, Form, Modal, Spinner } from \"react-bootstrap\";\r\nimport styles from \"./AuthModal.module.scss\";\r\n\r\nconst AuthModal = (props) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const loginInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const onSubmitHadler = async (event) => {\r\n    event.preventDefault();\r\n    setIsError(false);\r\n    setIsFetching(true);\r\n\r\n    await props.authenticationHandler(\r\n      loginInputRef,\r\n      passwordInputRef,\r\n      setIsError,\r\n      setIsFetching\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.modalIsShown} onHide={props.onHideModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Authorization</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form data-testid=\"login-form\" onSubmit={onSubmitHadler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue=\"hlep\"\r\n                required\r\n                ref={loginInputRef}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                defaultValue=\"121212\"\r\n                required\r\n                ref={passwordInputRef}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className={styles.footer}>\r\n              {!isFetching && (\r\n                <Button className=\"w-100\" type=\"submit\" variant=\"outline-dark\">\r\n                  Sign in\r\n                </Button>\r\n              )}\r\n              {isFetching && <Spinner className=\"mx-10\" animation=\"grow\" />}\r\n              {!isFetching && isError && (\r\n                <p>Invalid username and/or password</p>\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n","import AuthModal from \"./AuthModal\";\r\n\r\nexport default AuthModal;\r\n","export const API_DOMAIN = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"a61e6e15f8aa4e533051cb627eaa2dd5\";\r\n\r\nexport const ACTION_SEND = \"SEND\";\r\nexport const ACTION_SUCCESS = \"SUCCESS\";\r\nexport const ACTION_ERROR = \"ERROR\";\r\n\r\nexport const PAGINATION_INCREASE = \"INCREASE\";\r\nexport const PAGINATION_DECREASE = \"DECREASE\";\r\n\r\nexport const IMAGE_DOMAIN = \"https://image.tmdb.org/t/p/w500\";\r\nexport const ERROR_IMAGE_URL = \"https://i.imgur.com/GIeKF0n.png\";","import * as CONSTANTS from \"./constants\";\r\n\r\nexport async function fetchData(path, init = {}) {\r\n  const response = await fetch(path, init);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getFilms(page, year, sorting, genres) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/discover/movie?api_key=${CONSTANTS.API_KEY}&include_video=false&page=${page}&sort_by=${sorting}&year=${year}&with_genres=${genres}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getGenres() {\r\n  const path = `${CONSTANTS.API_DOMAIN}/genre/movie/list?api_key=${CONSTANTS.API_KEY}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function createRequestToken() {\r\n  const path = `${CONSTANTS.API_DOMAIN}/authentication/token/new?api_key=${CONSTANTS.API_KEY}`;\r\n  const data = await fetchData(path);\r\n  return data.request_token;\r\n}\r\n\r\nexport async function validateWithLogin(login, password, requestToken) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/authentication/token/validate_with_login?api_key=${CONSTANTS.API_KEY}`;\r\n  const initObject = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      username: login,\r\n      password: password,\r\n      request_token: requestToken,\r\n    }),\r\n  };\r\n  return fetchData(path, initObject);\r\n}\r\n\r\nexport async function createSession(requestToken) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/authentication/session/new?api_key=${CONSTANTS.API_KEY}`;\r\n  const initObject = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      request_token: requestToken,\r\n    }),\r\n  };\r\n  return fetchData(path, initObject);\r\n}\r\n\r\nexport async function getUserData(sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  return fetchData(path);\r\n}\r\n\r\nexport async function getFavoriteFilms(sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account/{account_id}/favorite/movies?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  const data = await fetchData(path);\r\n  let reformatedData = data.results.map((dataItem) => dataItem.id);\r\n\r\n  return reformatedData;\r\n}\r\n\r\nexport async function setFavoriteFilm(type, filmId, sessionId) {\r\n  const path = `${CONSTANTS.API_DOMAIN}/account/{account_id}/favorite?api_key=${CONSTANTS.API_KEY}&session_id=${sessionId}`;\r\n  const initObject = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      media_type: \"movie\",\r\n      media_id: filmId,\r\n      favorite: type,\r\n    }),\r\n  };\r\n  fetchData(path, initObject);\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { getFavoriteFilms } from \"../utils/api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n  userName: \"\",\r\n  setUserName: (userName) => {},\r\n  favoriteFilms: [],\r\n  setFavoriteFilms: (films) => {},\r\n});\r\n\r\nconst retrieveStoredData = () => {\r\n  const storedToken = Cookies.get(\"token\");\r\n  const storedUserName = Cookies.get(\"userName\");\r\n\r\n  return {\r\n    token: storedToken,\r\n    userName: storedUserName,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const storedData = retrieveStoredData();\r\n  let initialToken;\r\n  let initialUserName;\r\n\r\n  if (storedData) {\r\n    initialToken = storedData.token;\r\n    initialUserName = storedData.userName;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const [userName, setUserName] = useState(initialUserName);\r\n  const [favoriteFilms, setFavoriteFilms] = useState([]);\r\n\r\n  const fetchFavorites = useCallback(async () => {\r\n    if (token) {\r\n      const data = await getFavoriteFilms(token);\r\n      setFavoriteFilms(data);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    fetchFavorites();\r\n  }, [fetchFavorites]);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"userName\");\r\n  }, []);\r\n\r\n  const loginHandler = (token, userName) => {\r\n    setToken(token);\r\n    Cookies.set(\"token\", token);\r\n    Cookies.set(\"userName\", userName);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userName,\r\n    setUserName,\r\n    favoriteFilms,\r\n    setFavoriteFilms,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faStar as faStarRegular } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faStar as faStarSolid } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faStarRegular, faStarSolid);\r\n","import { Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport styles from \"./FilmsListItem.module.scss\";\r\nimport * as CONSTANTS from \"../../utils/constants\";\r\nimport \"../../utils/fontawasome\";\r\n\r\nconst FilmsListItem = (props) => {\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  const iconType = props.isFavorite ? \"fas\" : \"far\";\r\n\r\n  return (\r\n    <>\r\n      <Card className={styles.card}>\r\n        {props.backdropPath && (\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={`${CONSTANTS.IMAGE_DOMAIN}${props.backdropPath}`}\r\n            alt={props.backdropPath}\r\n          />\r\n        )}\r\n        {!props.backdropPath && (\r\n          <Card.Img variant=\"top\" src={CONSTANTS.ERROR_IMAGE_URL} />\r\n        )}\r\n        <Card.Body className={styles.body}>\r\n          <Card.Title data-testid=\"title\">{props.title}</Card.Title>\r\n          <Card.Text data-testid=\"subtitle\">Rating: {props.rating}</Card.Text>\r\n        </Card.Body>\r\n        {isLoggedIn && (\r\n          <Card.Footer>\r\n            <FontAwesomeIcon\r\n              data-testid=\"favorite-icon\"\r\n              icon={[iconType, \"star\"]}\r\n              onClick={() => {\r\n                props.setFavoriteFilm(props.filmId, props.isFavorite);\r\n              }}\r\n            />\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmsListItem;\r\n","import FilmsListItem from \"./FilmsListItem\";\r\n\r\nexport default FilmsListItem;\r\n","import LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nexport default LoadingSpinner;\r\n","import styles from \"./LoadingSpinner.module.scss\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={styles.spinner}></div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import FilmsList from \"./FilmsList\";\r\n\r\nexport default FilmsList;\r\n","import React, { useContext } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { setFavoriteFilm } from \"../../utils/api\";\r\nimport FilmsListItem from \"../FilmsListItem\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport styles from \"./FilmsList.module.scss\";\r\n\r\nconst FilmsList = React.memo((props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  let filmsList;\r\n\r\n  const addFavoriteFilmHandler = (filmId) => {\r\n    authCtx.setFavoriteFilms((prevState) => [...prevState, filmId]);\r\n    setFavoriteFilm(true, filmId, authCtx.token);\r\n  };\r\n\r\n  const removeFavoriteFilmHandler = (filmId) => {\r\n    authCtx.setFavoriteFilms((prevState) =>\r\n      prevState.filter((itemId) => itemId !== filmId)\r\n    );\r\n    setFavoriteFilm(false, filmId, authCtx.token);\r\n  };\r\n\r\n  const favoriteFilmHandler = (filmId, isFavorite) => {\r\n    if (isFavorite) {\r\n      removeFavoriteFilmHandler(filmId);\r\n    } else {\r\n      addFavoriteFilmHandler(filmId);\r\n    }\r\n  };\r\n\r\n  if (props.status === \"completed\" && !!props.films.length) {\r\n    filmsList = (\r\n      <Row xs={1} md={2} xl={4} className=\"g-4\">\r\n        {props.films.map((filmItem) => (\r\n          <Col className=\"g-4\" key={filmItem.id}>\r\n            <FilmsListItem\r\n              setFavoriteFilm={favoriteFilmHandler}\r\n              isFavorite={authCtx.favoriteFilms.includes(filmItem.id)}\r\n              filmId={filmItem.id}\r\n              backdropPath={filmItem.backdrop_path}\r\n              title={filmItem.title}\r\n              rating={filmItem.vote_average}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  } else if (props.status === \"completed\" && !props.films.length) {\r\n    filmsList = <p>No movies found by these search criteria...</p>;\r\n  } else {\r\n    filmsList = <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div data-testid=\"films-list\" className={styles.filmsList}>\r\n      {filmsList}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FilmsList;\r\n","import GenreItem from \"./GenreItem\";\r\n\r\nexport default GenreItem;\r\n","import { Form } from \"react-bootstrap\";\r\n\r\nconst GenreItem = ({ isSelected, ...props }) => {\r\n  const onCheckHandler = () => {\r\n    props.onSelect(!isSelected, props.id);\r\n  };\r\n\r\n  return (\r\n    <Form.Check\r\n      data-testid=\"checkbox\"\r\n      id={props.id}\r\n      type=\"checkbox\"\r\n      label={props.name}\r\n      checked={isSelected}\r\n      onChange={onCheckHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GenreItem;\r\n","import Genres from \"./Genres\";\r\n\r\nexport default Genres;\r\n","import React from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport GenreItem from \"../GenreItem\";\r\n\r\nconst Genres = ({ allGenresList, selectedGenresList, setGenresFilter }) => {\r\n  const onSelectHandler = (isSelected, genreId) => {\r\n    if (isSelected) {\r\n      setGenresFilter([...selectedGenresList, genreId]);\r\n    }\r\n\r\n    if (!isSelected) {\r\n      setGenresFilter(\r\n        selectedGenresList.filter((genreItem) => genreItem !== genreId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const resetGenresHandler = () => {\r\n    setGenresFilter([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        data-testid=\"reset-genres\"\r\n        onClick={resetGenresHandler}\r\n        className=\"my-2 w-100\"\r\n        variant=\"outline-secondary\"\r\n      >\r\n        Show All Genres\r\n      </Button>\r\n      <Form.Group className=\"my-2\" data-testid=\"genres-list\">\r\n        {!allGenresList && <Spinner animation=\"grow\" />}\r\n        {allGenresList &&\r\n          allGenresList.map((genreItem) => (\r\n            <GenreItem\r\n              isSelected={selectedGenresList.includes(genreItem.id)}\r\n              onSelect={onSelectHandler}\r\n              key={genreItem.id}\r\n              id={genreItem.id}\r\n              name={genreItem.name}\r\n            />\r\n          ))}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import Pagination from \"./Pagination\";\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as CONSTANTS from \"../../../utils/constants\";\r\nimport styles from \"./Pagination.module.scss\";\r\n\r\nconst Pagination = (props) => {\r\n  const onClickHandler = (changeType) => {\r\n    props.setPageFilter(changeType, props.filteredPage);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          data-testid=\"decrease-button\"\r\n          variant=\"outline-secondary\"\r\n          className=\"m-1 w-100\"\r\n          onClick={() => {\r\n            onClickHandler(CONSTANTS.PAGINATION_DECREASE);\r\n          }}\r\n        >\r\n          «\r\n        </Button>\r\n        <Button\r\n          data-testid=\"increase-button\"\r\n          variant=\"outline-secondary\"\r\n          className=\"m-1 w-100\"\r\n          onClick={() => {\r\n            onClickHandler(CONSTANTS.PAGINATION_INCREASE);\r\n          }}\r\n        >\r\n          »\r\n        </Button>\r\n      </div>\r\n      <p className={styles.pages}>\r\n        <span>Page:</span> {props.filteredPage} of {props.totalPages}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import ReleaseYear from \"./ReleaseYear\";\r\n\r\nexport default ReleaseYear;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst ReleaseYear = React.memo((props) => {\r\n  const onChangeHandler = (event) => {\r\n    props.setYearFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form.Group className=\"my-3\">\r\n      <Form.Label>Release year:</Form.Label>\r\n      <Form.Select\r\n        data-testid=\"year-select\"\r\n        aria-label=\"Default select example\"\r\n        onChange={onChangeHandler}\r\n        value={props.filteredYear}\r\n      >\r\n        <option value=\"2021\">2021</option>\r\n        <option value=\"2020\">2020</option>\r\n        <option value=\"2019\">2019</option>\r\n        <option value=\"2018\">2018</option>\r\n      </Form.Select>\r\n    </Form.Group>\r\n  );\r\n});\r\nexport default ReleaseYear;\r\n","import ResetFilters from \"./ResetFilters\";\r\n\r\nexport default ResetFilters;\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nconst ResetFilters = (props) => {\r\n  const onClickHandler = () => {\r\n    props.resetFilters();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      data-testid=\"reset-button\"\r\n      className=\"w-100\"\r\n      variant=\"outline-secondary\"\r\n      onClick={onClickHandler}\r\n    >\r\n      Reset Filters\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ResetFilters;\r\n","import SortBy from \"./SortBy\";\r\n\r\nexport default SortBy;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst SortBy = React.memo((props) => {\r\n  const onChangeHandler = (event) => {\r\n    props.setSortingFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form.Group className=\"my-3\">\r\n      <Form.Label>Sort by:</Form.Label>\r\n      <Form.Select\r\n        data-testid=\"sort-select\"\r\n        aria-label=\"Default select example\"\r\n        onChange={onChangeHandler}\r\n        value={props.filteredSorting}\r\n      >\r\n        <option value=\"popularity.desc\">Most Popular</option>\r\n        <option value=\"popularity.asc\">Least Popular</option>\r\n        <option value=\"vote_average.desc\">Most Wanted</option>\r\n        <option value=\"vote_average.asc\">Least Wanted</option>\r\n      </Form.Select>\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nexport default SortBy;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport styles from \"./Filters.module.scss\";\r\nimport Genres from \"./Genres\";\r\nimport Pagination from \"./Pagination\";\r\nimport ReleaseYear from \"./ReleaseYear\";\r\nimport ResetFilters from \"./ResetFilters\";\r\nimport SortBy from \"./SortBy\";\r\nimport * as CONSTANTS from \"../../utils/constants\";\r\n\r\nconst Filters = React.memo(\r\n  ({ totalPages, defaultFiltersState, setFilters, filters, ...props }) => {\r\n    // Functions to modify app.js filters state\r\n\r\n    const setPage = useCallback(\r\n      (changeType, prevPage) => {\r\n        let newPage;\r\n        if (changeType === CONSTANTS.PAGINATION_INCREASE) {\r\n          newPage = prevPage === totalPages ? totalPages : ++prevPage;\r\n        }\r\n\r\n        if (changeType === CONSTANTS.PAGINATION_DECREASE) {\r\n          newPage = prevPage === 1 ? 1 : --prevPage;\r\n        }\r\n\r\n        return { page: newPage };\r\n      },\r\n      [totalPages]\r\n    );\r\n\r\n    const setYear = useCallback((year) => {\r\n      return { year, page: 1 };\r\n    }, []);\r\n\r\n    const setSorting = useCallback((sorting) => {\r\n      return { sorting, page: 1 };\r\n    }, []);\r\n\r\n    const setGenres = useCallback((genres) => {\r\n      return { genres, page: 1 };\r\n    }, []);\r\n\r\n    const resetFilters = useCallback(() => {\r\n      return defaultFiltersState;\r\n    }, [defaultFiltersState]);\r\n\r\n    // Selecting the desired function\r\n\r\n    const setFunctions = useMemo(() => {\r\n      return {\r\n        PAGE: setPage,\r\n        YEAR: setYear,\r\n        SORT: setSorting,\r\n        GENRES: setGenres,\r\n        RESET: resetFilters,\r\n      };\r\n    }, [resetFilters, setGenres, setSorting, setYear, setPage]);\r\n\r\n    const setFiltersHandler = useCallback(\r\n      (filterType, ...args) => {\r\n        const propertiesToFilter = setFunctions[filterType](...args);\r\n\r\n        setFilters((prevState) => {\r\n          return { ...prevState, ...propertiesToFilter };\r\n        });\r\n      },\r\n      [setFilters, setFunctions]\r\n    );\r\n\r\n    // Filter handlers with preset types\r\n\r\n    const setGenresFilterHandler = useCallback(\r\n      (selectedGenres) => {\r\n        setFiltersHandler(\"GENRES\", selectedGenres);\r\n      },\r\n      [setFiltersHandler]\r\n    );\r\n\r\n    const setSortingFilterHandler = (sortingValue) => {\r\n      setFiltersHandler(\"SORT\", sortingValue);\r\n    };\r\n\r\n    const setYearFilterHandler = (releaseYear) => {\r\n      setFiltersHandler(\"YEAR\", releaseYear);\r\n    };\r\n\r\n    const setPageFilterHandler = (changeType, curPage) => {\r\n      setFiltersHandler(\"PAGE\", changeType, curPage);\r\n    };\r\n\r\n    const resetFiltersHandler = () => {\r\n      setFiltersHandler(\"RESET\");\r\n    };\r\n\r\n    return (\r\n      <div data-testid=\"filters\" className={styles.filters}>\r\n        <h2>Filters:</h2>\r\n\r\n        <>\r\n          <ResetFilters resetFilters={resetFiltersHandler} />\r\n          <SortBy\r\n            setSortingFilter={setSortingFilterHandler}\r\n            filteredSorting={filters.sorting}\r\n          />\r\n          <ReleaseYear\r\n            setYearFilter={setYearFilterHandler}\r\n            filteredYear={filters.year}\r\n          />\r\n          <Genres\r\n            allGenresList={props.allGenresList.genres}\r\n            selectedGenresList={filters.genres}\r\n            setGenresFilter={setGenresFilterHandler}\r\n          />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setPageFilter={setPageFilterHandler}\r\n            filteredPage={filters.page}\r\n          />\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Filters;\r\n","import Filters from \"./Filters\";\r\n\r\nexport default Filters;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header","import { useContext } from \"react\";\r\nimport { Button, Container, Navbar } from \"react-bootstrap\";\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nconst Header = ({ onShowModal }) => {\r\n  const { isLoggedIn, logout, userName } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand className=\"user-select-none\">Movies Project</Navbar.Brand>\r\n        {!isLoggedIn && (\r\n          <Button\r\n            data-testid=\"login-button\"\r\n            variant=\"outline-light\"\r\n            onClick={onShowModal}\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n        {isLoggedIn && (\r\n          <Button\r\n            data-testid=\"logout-button\"\r\n            variant=\"outline-light\"\r\n            onClick={() => {\r\n              logout(false);\r\n            }}\r\n          >\r\n            <span>Hello, </span>\r\n            <span className=\"text-decoration-underline\">{userName}</span>\r\n            <span>!</span>\r\n          </Button>\r\n        )}\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Layout from \"./Layout\";\r\n\r\nexport default Layout","import Header from \"../Header\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Header onShowModal={props.onShowModal} isLoggedIn={props.isLoggedIn} setIsLoggedIn={props.setIsLoggedIn} />\r\n      <main>\r\n        <Container>{props.children}</Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useCallback, useReducer } from \"react\";\r\nimport * as CONSTANTS from \"../utils/constants\";\r\n\r\nconst defaultMoviesState = {\r\n  data: {\r\n    results: [],\r\n    total_pages: 0,\r\n  },\r\n  error: null,\r\n  status: \"pending\",\r\n};\r\n\r\nconst moviesReducer = (state, action) => {\r\n  if (action.type === CONSTANTS.ACTION_SEND) {\r\n    return {\r\n      ...defaultMoviesState,\r\n      data: { ...state.data },\r\n    };\r\n  }\r\n\r\n  if (action.type === CONSTANTS.ACTION_SUCCESS) {\r\n    return {\r\n      data: { ...state.data, ...action.responseData },\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === CONSTANTS.ACTION_ERROR) {\r\n    return {\r\n      ...defaultMoviesState,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst useMovies = (requestFunction, filters) => {\r\n  const [moviesState, dispatch] = useReducer(moviesReducer, defaultMoviesState);\r\n\r\n  const { page, year, sorting, genres } = filters;\r\n\r\n  const sendRequest = useCallback(\r\n    async function () {\r\n      dispatch({ type: CONSTANTS.ACTION_SEND });\r\n      try {\r\n        const responseData = await requestFunction(\r\n          page,\r\n          year,\r\n          sorting,\r\n          genres\r\n        );\r\n        dispatch({\r\n          type: CONSTANTS.ACTION_SUCCESS,\r\n          responseData: {\r\n            results: responseData.results,\r\n            total_pages: responseData.total_pages,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: CONSTANTS.ACTION_ERROR,\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction, page, year, sorting, genres]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...moviesState,\r\n  };\r\n};\r\n\r\nexport default useMovies;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport ReactDOM from \"react-dom\";\nimport AuthModal from \"./components/AuthModal\";\nimport FilmsList from \"./components/FilmsList\";\nimport Filters from \"./components/Filters\";\nimport Layout from \"./components/Layout\";\nimport useMovies from \"./hooks/useMovies\";\nimport AuthContext from \"./store/auth-context\";\nimport {\n  createRequestToken,\n  createSession,\n  getFavoriteFilms,\n  getFilms,\n  getGenres,\n  getUserData,\n  validateWithLogin,\n} from \"./utils/api\";\n\nconst defaultFiltersState = {\n  page: 1,\n  sorting: \"popularity.desc\",\n  year: 2021,\n  genres: [],\n};\n\nconst App = () => {\n  const [allGenresList, setAllGenresList] = useState([]);\n  const [filters, setFilters] = useState(defaultFiltersState);\n  const { sendRequest, status, data } = useMovies(getFilms, filters);\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const hideModalHandler = () => setModalIsShown(false);\n  const showModalHandler = () => setModalIsShown(true);\n\n  const fetchGenres = async () => {\n    const genres = await getGenres();\n    setAllGenresList(genres);\n  };\n\n  const authenticationHandler = async (\n    loginInputRef,\n    passwordInputRef,\n    setIsError,\n    setIsFetching\n  ) => {\n    const enteredLogin = loginInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    const requestToken = await createRequestToken();\n\n    const validation = await validateWithLogin(\n      enteredLogin,\n      enteredPassword,\n      requestToken\n    );\n\n    if (validation.success) {\n      const newSession = await createSession(requestToken);\n\n      if (newSession.success) {\n        const sessionId = newSession.session_id;\n\n        const userData = await getUserData(sessionId);\n        const favoriteFilms = await getFavoriteFilms(sessionId);\n\n        authCtx.setUserName(userData.username);\n        authCtx.setFavoriteFilms(favoriteFilms);\n        authCtx.login(sessionId, userData.username, favoriteFilms);\n        setIsFetching(false);\n        hideModalHandler();\n      }\n    } else {\n      setIsFetching(false);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  const portalElement = document.getElementById(\"overlays\");\n\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <AuthModal\n          modalIsShown={modalIsShown}\n          onHideModal={hideModalHandler}\n          authenticationHandler={authenticationHandler}\n        />,\n        portalElement\n      )}\n      <Layout onShowModal={showModalHandler}>\n        <Row>\n          <Col xs=\"5\" md=\"4\" lg=\"3\">\n            <Filters\n              status={status}\n              allGenresList={allGenresList}\n              totalPages={data.total_pages}\n              filters={filters}\n              setFilters={setFilters}\n              defaultFiltersState={defaultFiltersState}\n            />\n          </Col>\n          <Col>\n            <FilmsList status={status} films={data.results} />\n          </Col>\n        </Row>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}